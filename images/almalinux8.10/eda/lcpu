#!/usr/bin/env python3

import sys
import requests
import getpass
import os
import random
import string

config_path = "/home/almalinux/.config/shadowdesk/backend.env"

def generate_password():
    """生成随机密码：@eda加8位随机数字和字母"""
    chars = string.ascii_letters + string.digits
    random_part = ''.join(random.choice(chars) for _ in range(8))
    return f"@eda{random_part}"

def modify_shadowdesk_config(student_id, password):
    """修改shadowdesk配置文件"""
    
    # 保存用户名和密码到用户家目录
    home_dir = os.path.expanduser("~")
    with open(os.path.join(home_dir, "rd_password"), 'w') as f:
        f.write(f"用户名: clabeda_{student_id}\n密码: {password}\n")
    
    # 检查文件是否存在
    if not os.path.exists(config_path):
        print(f"警告: 配置文件 {config_path} 不存在")
        print(f"账号: clabeda_{student_id}")
        print(f"密码: {password}")
        return True
    
    try:
        # 读取配置文件
        with open(config_path, 'r') as f:
            content = f.read()        
        
        # 替换用户名和密码
        content = content.replace("REPLACE_ME_SHADOWDESK_USER_NAME", f"USER_ID=clabeda_{student_id}")
        content = content.replace("REPLACE_ME_SHADOWDESK_USER_PASSWORD", f"USER_PASSWORD={password}")
        
        # 写回配置文件
        with open(config_path, 'w') as f:
            f.write(content)
            
        os.system("sudo systemctl enable --now shadowxvfb@98 shadowgnome@98 shadowdesk@98")
        
        return True
    except Exception as e:
        print(f"修改配置文件时出错: {e}")
        print(f"账号: clabeda_{student_id}")
        print(f"密码: {password}")
        return False

def main():
    if len(sys.argv) != 2 or sys.argv[1] not in ['connect', 'c', 'disconnect', 'rd']:
        print('''lcpu - connect to its gateway

commands:
  connect: connect to gateway
  disconnect: disconnect from gateway
  rd: setup remote desktop credentials
''')
        return
        
    if sys.argv[1] == "disconnect":
        url = "https://its4.pku.edu.cn/cas/ITSClient"
        payload = {
            'cmd': 'close',
            'land': None
        }
        headers = {'Content-type': 'application/x-www-form-urlencoded'}

        result = requests.post(url, params=payload, headers=headers).json()
        if result.get("succ", False) == "close_OK":
            print("已断开网络！")
        else:
            print("发生错误: ", result["error"])
    
    elif sys.argv[1] == "rd":
        with open(config_path, 'r') as f:
            content = f.read() 
        if "REPLACE_ME_SHADOWDESK_USER_NAME" not in content and "REPLACE_ME_SHADOWDESK_USER_PASSWORD" not in content:
            print("账号密码已设置")
            # 从配置文件中读取用户名和密码
            # USER_ID=clabeda_2019xxxx
            # USER_PASSWORD=xxxx
            user_id_line = [line for line in content.split('\n') if line.startswith("USER_ID=")][0]
            user_id = user_id_line.split('=')[1]
            password_line = [line for line in content.split('\n') if line.startswith("USER_PASSWORD=")][0]
            password = password_line.split('=')[1]
            print("请前往rd.lcpu.dev登录使用")
            print(f"用户名: {user_id}")
            print(f"密码: {password}")
            # ensure shadowxvfb@98 shadowgnome@98 shadowdesk@98 services are running
            os.system("sudo systemctl enable --now shadowxvfb@98 shadowgnome@98 shadowdesk@98")
            return
        student_id = input("请输入学号: ")
        password = generate_password()
        
        print(f"\n生成的随机密码: {password}")
        
        if modify_shadowdesk_config(student_id, password):
            print("\n配置已成功修改！")
            print(f"用户名和密码已保存到 {os.path.expanduser('~')}/rd_password")
            print("请前往rd.lcpu.dev登录使用")
            print(f"用户名: clabeda_{student_id}")
            print(f"密码: {password}")
        else:
            print("\n配置修改失败，请检查权限或文件路径。")
            
    else:
        username = input("请输入用户名: ")
        password = getpass.getpass("请输入密码: ")

        url = "https://its4.pku.edu.cn/cas/ITSClient"
        payload = {
            'username': username,
            'password': password,
            'iprange': 'free',
            'cmd': 'open'
        }
        headers = {'Content-type': 'application/x-www-form-urlencoded'}

        result = requests.post(url, params=payload, headers=headers).json()
        if result.get("succ", False) != False:
            print("成功连接网络！")
        else:
            print("连接网关失败: ", result['error'])

if __name__ == "__main__":
    main()